@using TimeManager.UI.Models
@model EditEventViewModel

@{
    var ajaxOptions = new AjaxOptions()
    {
        HttpMethod = "POST",
        OnSuccess = "onSuccess"
    };
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">Edit</h4>
</div>

@using (Ajax.BeginForm("EditEvent", null, ajaxOptions, new { @class = "form-horizontal" }))
{
    @Html.HiddenFor(n => n.Id)
    <div class="modal-body">
        <div class="form-group">
            @Html.LabelFor(n => n.Name, new { @class = "control-label col-xs-3" })
            <div class="col-xs-4">
                @Html.TextBoxFor(n => n.Name, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(n => n.Name)
        </div>
        <div class="form-group">
            @Html.LabelFor(n => n.BeginTime, new { @class = "control-label col-xs-3" })
            <div class="col-xs-4">
                @Html.TextBoxFor(n => n.BeginTime, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(n => n.BeginTime)
        </div>
        <div class="form-group">
            @Html.LabelFor(n => n.EndTime, new { @class = "control-label col-xs-3" })
            <div class="col-xs-4">
                @Html.TextBoxFor(n => n.EndTime, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(n => n.EndTime)
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">Edit</button>
    </div>
}